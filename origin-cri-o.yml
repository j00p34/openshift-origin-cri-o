---
- hosts: all
  remote_user: root
  tasks:
    - name: install stuff
      dnf: name={{ item }} state=latest
      with_items:
        - docker
        - git
        - polkit
        - vim
        - NetworkManager
        - golang
        - btrfs-progs-devel
        - device-mapper-devel
        - glib2-devel
        - glibc-devel
        - glibc-static
        - gpgme-devel
        - libassuan-devel
        - libgpg-error-devel
        - libseccomp-devel
        - libselinux-devel
        - pkgconfig
        - skopeo-containers
        - python3-dbus
        - python-dbus
    - name: enable and start NetworkManager
      systemd:
        name: NetworkManager
        state: started
        enabled: yes
    - name: remove journald log driver on F26 docker-1.13 causing panic
      replace:
              regexp: ' --log-driver=journald'
              replace: ''
              path: /etc/sysconfig/docker
              backup: yes
      when: ansible_distribution == 'Fedora' and ansible_distribution_version == '26'
    - name: enable and start docker
      systemd:
        name: docker
        state: started
        enabled: yes
    - name: update all
      dnf: name=* state=latest
    - name: clone runc
      git:
        repo: https://github.com/opencontainers/runc
        dest: /root/src/github.com/opencontainers/runc
      register: clone_runc
    - name: clone CRI-O
      git:
        repo: https://github.com/kubernetes-incubator/cri-o
        dest: /root/src/github.com/kubernetes-incubator/cri-o
        version: kube-1.6.x
        force: yes
      register: clone_crio
    - name: clone CNI
      git:
        repo: https://github.com/containernetworking/plugins
        dest: /root/src/github.com/containernetworking/plugins
      register: clone_cni
    - name: clone skopeo
      git:
        repo: https://github.com/projectatomic/skopeo
        dest: /root/src/github.com/projectatomic/skopeo
      register: clone_skopeo
    - name: build skopeo
      shell: |
              cd /root/src/github.com/projectatomic/skopeo && \
              export GOPATH=/root && \
              make binary-local && \
              make install-binary
      when: clone_skopeo.changed
    - name: build runc
      shell: |
              cd /root/src/github.com/opencontainers/runc && \
              export GOPATH=/root && \
              make && \
              make install
      when: clone_runc.changed
    - name: link runc
      file: src=/usr/local/sbin/runc dest=/usr/bin/runc state=link
      when: clone_runc.changed
    - name: build cri-o
      shell: |
              cd /root/src/github.com/kubernetes-incubator/cri-o && \
              make install.tools && \
              make && \
              make install && \
              make install.systemd && \
              make install.config
      when: clone_crio.changed
    - name: build CNI stuff
      shell: |
              cd /root/src/github.com/containernetworking/plugins && \
              ./build.sh && \
              mkdir -p /opt/cni/bin && \
              cp bin/* /opt/cni/bin/ && \
              mkdir -p /etc/cni/net.d && \
              cp /root/src/github.com/kubernetes-incubator/cri-o/contrib/cni/99-loopback.conf /etc/cni/net.d
      when: clone_cni.changed
    - name: enable and start CRI-O
      systemd:
        name: crio
        state: started
        enabled: yes
        daemon_reload: yes
    #- debug:
            #msg: "ansible-playbook -e openshift_pkg_version={{ origin_pkg_version.stdout }} -e oreg_url='openshift/origin-${component}:'{{ origin_commit.stdout[0:7] }} -vvvv -i {{ inventory_dir }}/origin.inventory ./playbooks/byo/config.yml"

