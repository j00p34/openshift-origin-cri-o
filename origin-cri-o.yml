---
- hosts: all
  remote_user: root
  tasks:
    - name: install stuff
      dnf: name={{ item }} state=latest
      with_items:
        - docker
        - git
        - polkit
        - vim
        - NetworkManager
        - golang
        - btrfs-progs-devel
        - device-mapper-devel
        - glib2-devel
        - glibc-devel
        - glibc-static
        - gpgme-devel
        - libassuan-devel
        - libgpg-error-devel
        - libseccomp-devel
        - libselinux-devel
        - pkgconfig
        - skopeo-containers
    - name: enable and start NetworkManager
      systemd:
        name: NetworkManager
        state: started
        enabled: True
    - name: clone origin
      shell: |
              mkdir -p /root/src/github.com/openshift && \
              git clone https://github.com/openshift/origin /root/src/github.com/openshift/origin || true && \
              cd /root/src/github.com/openshift/origin && \
              git pull
    - name: gather origin version
      shell: |
              git log -1 --pretty=%h > ORIGIN_COMMIT
              cat ORIGIN_COMMIT
      args:
        chdir: /root/src/github.com/openshift/origin
      register: origin_commit
    - name: build an origin release
      args:
        chdir: /root/src/github.com/openshift/origin
      shell: |
              hack/build-base-images.sh && \
              OS_BUILD_ENV_PRESERVE=_output/local hack/env OS_ONLY_BUILD_PLATFORMS='linux/amd64' hack/build-rpm-release.sh && \
              hack/build-images.sh && \
              sed -i 's|go/src|root/src|' _output/local/releases/rpms/origin-local-release.repo && \
              sudo cp _output/local/releases/rpms/origin-local-release.repo /etc/yum.repos.d/
    - name: gather origin pkg version
      args:
        chdir: /root/src/github.com/openshift/origin
        executable: /bin/bash
      shell: |
              ( source hack/lib/init.sh; os::build::rpm::get_nvra_vars; echo "-${OS_RPM_VERSION}-${OS_RPM_RELEASE}" ) > ORIGIN_PKG_VERSION
              cat ORIGIN_PKG_VERSION
      register: origin_pkg_version
    - name: update all
      shell: dnf update -y
    - name: build runc
      shell: |
              export GOPATH=/root && \
              mkdir -p /root/src/github.com/opencontainers && \
              git clone https://github.com/opencontainers/runc /root/src/github.com/opencontainers/runc || true && \
              cd /root/src/github.com/opencontainers/runc && \
              git pull && \
              make && \
              make install && \
              ln -s /usr/local/sbin/runc /usr/bin/runc
    - name: build cri-o
      shell: |
              mkdir -p /root/src/github.com/kubernetes-incubator && \
              git clone https://github.com/kubernetes-incubator/cri-o /root/src/github.com/kubernetes-incubator/cri-o || true && \
              cd /root/src/github.com/kubernetes-incubator/cri-o && \
              git checkout kube-1.6.1 && \
              make install.tools && \
              make && \
              make install && \
              make install.systemd && \
              make install.config
    - name: enable and start CRI-O
      systemd:
        name: ocid
        state: started
        enabled: yes
        daemon_reload: yes
    - debug:
            msg: "ansible-playbook -e openshift_pkg_version='{{ origin_pkg_version.stdout }}' -e oreg_url='openshift/origin-${component}:{{ origin_commit.stdout }}' -vvvv -i {{ inventory_dir }}/origin.inventory ./playbooks/byo/config.yml"

    # clone needed repos in $GOPATH
    # containernetworking
    # build and install CNI stuff
