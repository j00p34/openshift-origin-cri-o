---
- hosts: all
  remote_user: root
  tasks:
    - name: install stuff
      dnf: name={{ item }} state=latest
      with_items:
        - docker
        - git
        - polkit
        - vim
        - NetworkManager
        - golang
        - btrfs-progs-devel
        - device-mapper-devel
        - glib2-devel
        - glibc-devel
        - glibc-static
        - gpgme-devel
        - libassuan-devel
        - libgpg-error-devel
        - libseccomp-devel
        - libselinux-devel
        - pkgconfig
        - skopeo-containers
        - python3-dbus
        - python-dbus
    - name: enable and start NetworkManager
      systemd:
        name: NetworkManager
        state: started
        enabled: yes
    - name: clone origin
      git:
        repo: https://github.com/openshift/origin
        dest: /root/src/github.com/openshift/origin
    - name: enable and start docker
      systemd:
        name: docker
        state: started
        enabled: yes
    - name: remove ORIGIN_COMMIT
      file: path=/root/src/github.com/openshift/origin/ORIGIN_COMMIT state=absent
    - name: remove ORIGIN_PKG_VERSION
      file: path=/root/src/github.com/openshift/origin/ORIGIN_PKG_VERSION state=absent
    - name: build an origin release
      args:
        chdir: /root/src/github.com/openshift/origin
      shell: |
              hack/build-base-images.sh && \
              OS_BUILD_ENV_PRESERVE=_output/local hack/env OS_ONLY_BUILD_PLATFORMS='linux/amd64' hack/build-rpm-release.sh && \
              systemctl restart docker && \
              hack/build-images.sh && \
              sed -i 's|go/src|root/src|' _output/local/releases/rpms/origin-local-release.repo && \
              sudo cp _output/local/releases/rpms/origin-local-release.repo /etc/yum.repos.d/
      tags:
        - buildorigin
    - name: gather origin version
      shell: |
              git log -1 --pretty=%h > ORIGIN_COMMIT
              cat ORIGIN_COMMIT
      args:
        chdir: /root/src/github.com/openshift/origin
      register: origin_commit
    - name: gather origin pkg version
      args:
        chdir: /root/src/github.com/openshift/origin
        executable: /bin/bash
      shell: |
              ( source hack/lib/init.sh; os::build::rpm::get_nvra_vars; echo "-${OS_RPM_VERSION}-${OS_RPM_RELEASE}" ) > ORIGIN_PKG_VERSION
              cat ORIGIN_PKG_VERSION
      register: origin_pkg_version
    - name: update all
      dnf: name=* state=latest
    - name: clone runc
      git:
        repo: https://github.com/opencontainers/runc
        dest: /root/src/github.com/opencontainers/runc
    - name: clone CRI-O
      git:
        repo: https://github.com/kubernetes-incubator/cri-o
        dest: /root/src/github.com/kubernetes-incubator/cri-o
        version: kube-1.6.1
    - name: clone CNI
      git:
        repo: https://github.com/containernetworking/cni
        dest: /root/src/github.com/containernetworking/cni
    - name: clone skopeo
      git:
        repo: https://github.com/projectatomic/skopeo
        dest: /root/src/github.com/projectatomic/skopeo
    - name: build skopeo
      shell: |
              cd /root/src/github.com/projectatomic/skopeo && \
              export GOPATH=/root && \
              make binary-local && \
              make install-binary
    - name: build runc
      shell: |
              cd /root/src/github.com/opencontainers/runc && \
              export GOPATH=/root && \
              make && \
              make install
    - name: link runc
      file: src=/usr/local/sbin/runc dest=/usr/bin/runc state=link
    - name: build cri-o
      shell: |
              cd /root/src/github.com/kubernetes-incubator/cri-o && \
              make install.tools && \
              make && \
              make install && \
              make install.systemd && \
              make install.config
    - name: build CNI stuff
      shell: |
              cd /root/src/github.com/containernetworking/cni && \
              ./build.sh && \
              mkdir -p /opt/cni/bin && \
              cp bin/* /opt/cni/bin/ && \
              mkdir -p /etc/cni/net.d && \
              cp /root/src/github.com/kubernetes-incubator/cri-o/contrib/cni/99-loopback.conf /etc/cni/net.d
    - name: enable and start CRI-O
      systemd:
        name: ocid
        state: started
        enabled: yes
        daemon_reload: yes
    - name: gather openshift docker images
      shell: |
              docker images | awk '{if($2 != "latest" && $1 !~ "docker.io") print $1 ":" $2}' | tail -n +2 | xargs
      register: references
    - name: import openshift docker images into CRI-O
      command: "skopeo copy docker-daemon:{{ item }} containers-storage:{{ item }}"
      with_items:
            - "{{ references.stdout.split(' ') }}"
    - debug:
            msg: "ansible-playbook -e openshift_pkg_version={{ origin_pkg_version.stdout }} -e oreg_url='openshift/origin-${component}:'{{ origin_commit.stdout }} -vvvv -i {{ inventory_dir }}/origin.inventory ./playbooks/byo/config.yml"

